// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using PathSystem.DAL;

namespace PathSystem.Api.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20201231205443_AddedOwnerIdPropToRoute")]
    partial class AddedOwnerIdPropToRoute
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("PathSystem.DAL.Models.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("PathSystem.DAL.Models.OwnerRefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("OwnerRefreshTokens");
                });

            modelBuilder.Entity("PathSystem.DAL.Models.PathPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Point>("Point")
                        .HasColumnType("geography");

                    b.Property<int?>("RouteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RouteId");

                    b.ToTable("PathPoints");
                });

            modelBuilder.Entity("PathSystem.DAL.Models.Route", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("PathSystem.DAL.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PathSystem.DAL.Models.UserPathPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateVisited")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PathPointId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("Visited")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("PathPointId");

                    b.HasIndex("UserId");

                    b.ToTable("UserPathPoints");
                });

            modelBuilder.Entity("PathSystem.DAL.Models.UserRefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserRefreshTokens");
                });

            modelBuilder.Entity("PathSystem.DAL.Models.UserRoute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Finished")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RouteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Started")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RouteId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoute");
                });

            modelBuilder.Entity("PathSystem.DAL.Models.OwnerRefreshToken", b =>
                {
                    b.HasOne("PathSystem.DAL.Models.Owner", "Owner")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("PathSystem.DAL.Models.PathPoint", b =>
                {
                    b.HasOne("PathSystem.DAL.Models.Route", "Route")
                        .WithMany("PathPoints")
                        .HasForeignKey("RouteId");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("PathSystem.DAL.Models.Route", b =>
                {
                    b.HasOne("PathSystem.DAL.Models.Owner", "Owner")
                        .WithMany("Routes")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("PathSystem.DAL.Models.UserPathPoint", b =>
                {
                    b.HasOne("PathSystem.DAL.Models.PathPoint", "PathPoint")
                        .WithMany("UserPathPoints")
                        .HasForeignKey("PathPointId");

                    b.HasOne("PathSystem.DAL.Models.User", "User")
                        .WithMany("UserPathPoints")
                        .HasForeignKey("UserId");

                    b.Navigation("PathPoint");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PathSystem.DAL.Models.UserRefreshToken", b =>
                {
                    b.HasOne("PathSystem.DAL.Models.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PathSystem.DAL.Models.UserRoute", b =>
                {
                    b.HasOne("PathSystem.DAL.Models.Route", "Route")
                        .WithMany()
                        .HasForeignKey("RouteId");

                    b.HasOne("PathSystem.DAL.Models.User", "User")
                        .WithMany("UserRoutes")
                        .HasForeignKey("UserId");

                    b.Navigation("Route");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PathSystem.DAL.Models.Owner", b =>
                {
                    b.Navigation("RefreshTokens");

                    b.Navigation("Routes");
                });

            modelBuilder.Entity("PathSystem.DAL.Models.PathPoint", b =>
                {
                    b.Navigation("UserPathPoints");
                });

            modelBuilder.Entity("PathSystem.DAL.Models.Route", b =>
                {
                    b.Navigation("PathPoints");
                });

            modelBuilder.Entity("PathSystem.DAL.Models.User", b =>
                {
                    b.Navigation("RefreshTokens");

                    b.Navigation("UserPathPoints");

                    b.Navigation("UserRoutes");
                });
#pragma warning restore 612, 618
        }
    }
}
