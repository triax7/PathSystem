// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using PathSystemServer;

namespace PathSystemServer.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20201124200222_AddNameToRouteAndPoint")]
    partial class AddNameToRouteAndPoint
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PathSystemServer.Models.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("PathSystemServer.Models.OwnerRefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("OwnerRefreshTokens");
                });

            modelBuilder.Entity("PathSystemServer.Models.PathPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Point>("Point")
                        .HasColumnType("geography");

                    b.Property<int?>("RouteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RouteId");

                    b.ToTable("PathPoints");
                });

            modelBuilder.Entity("PathSystemServer.Models.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("PathSystemServer.Models.Route", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("PathSystemServer.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@admin.admin",
                            Name = "Admin",
                            PasswordHash = "AHVwC1Gelz8mveHqFETmCHnwyoa0HFeLBkNEOn0WFnIKkNQTRAygRzrWoVmfn9me4Q=="
                        });
                });

            modelBuilder.Entity("PathSystemServer.Models.UserPathPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateVisited")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PathPointId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("Visited")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("PathPointId");

                    b.HasIndex("UserId");

                    b.ToTable("UserPathPoints");
                });

            modelBuilder.Entity("PathSystemServer.Models.UserRoute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Finished")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RouteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Started")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RouteId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoute");
                });

            modelBuilder.Entity("PathSystemServer.Models.OwnerRefreshToken", b =>
                {
                    b.HasOne("PathSystemServer.Models.Owner", "Owner")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("OwnerId");
                });

            modelBuilder.Entity("PathSystemServer.Models.PathPoint", b =>
                {
                    b.HasOne("PathSystemServer.Models.Route", "Route")
                        .WithMany("PathPoints")
                        .HasForeignKey("RouteId");
                });

            modelBuilder.Entity("PathSystemServer.Models.RefreshToken", b =>
                {
                    b.HasOne("PathSystemServer.Models.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("PathSystemServer.Models.Route", b =>
                {
                    b.HasOne("PathSystemServer.Models.Owner", null)
                        .WithMany("Routes")
                        .HasForeignKey("OwnerId");
                });

            modelBuilder.Entity("PathSystemServer.Models.UserPathPoint", b =>
                {
                    b.HasOne("PathSystemServer.Models.PathPoint", "PathPoint")
                        .WithMany("UserPathPoints")
                        .HasForeignKey("PathPointId");

                    b.HasOne("PathSystemServer.Models.User", "User")
                        .WithMany("UserPathPoints")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("PathSystemServer.Models.UserRoute", b =>
                {
                    b.HasOne("PathSystemServer.Models.Route", "Route")
                        .WithMany()
                        .HasForeignKey("RouteId");

                    b.HasOne("PathSystemServer.Models.User", "User")
                        .WithMany("UserRoutes")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
